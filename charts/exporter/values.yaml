annotations: {}
replicaCount: 1
imagePullPolicy: IfNotPresent
imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}
securityContext: {}
  # fsGroup: 1001
  # runAsGroup: 1001
  # runAsNonRoot: true
  # runAsUser: 1001
resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 256Mi
  # requests:
  #   cpu: 200m
  #   memory: 128Mi
terminationGracePeriodSeconds: 5
probes:
  readiness:
    initialDelaySeconds: 3
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  liveness:
    initialDelaySeconds: 3
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
service:
  enabled: true
  annotations: {}
  port: 80
  sessionAffinity: None

prometheusOperator:
  enableExampleProbes: false

configMap:
  enabled: false
  data: |
    modules:
      https:
        prober: https
      https_insecure:
        prober: https
        tls_config:
          insecure_skip_verify: true
      https_proxy:
        prober: https
        https:
          proxy_url: "socks5://localhost:8123"
      https_timeout:
        prober: https
        timeout: 3s
      tcp:
        prober: tcp
      tcp_servername:
        prober: tcp
        tls_config:
          server_name: example.com
      tcp_client_auth:
        prober: tcp
        tls_config:
          ca_file: /etc/tls/ca.crt
          cert_file: /etc/tls/tls.crt
          key_file: /etc/tls/tls.key
      tcp_smtp_starttls:
        prober: tcp
        tcp:
          starttls: smtp
      file:
        prober: file
      kubernetes:
        prober: kubernetes
      kubernetes_kubeconfig:
        prober: kubernetes
        kubernetes:
          kubeconfig: /root/.kube/config
      kubeconfig:
        prober: kubeconfig
